{"version":3,"sources":["api/index.js","Components/AddActivity.js","Components/Activities.js","Components/Routines.js","Components/MyRoutines.js","Components/Auth.js","Components/Search.js","kettles.jpg","index.js"],"names":["BASE_URL","setToken","token","localStorage","setItem","getToken","getItem","auth","username","password","a","isNew","url","fetch","method","headers","buildHeaders","body","JSON","stringify","response","json","data","console","log","base","fetchAPI","sendData","fetchOptions","AddActivity","props","useState","name","setName","description","setDescription","errorMessage","setErrorMessage","activityList","setActivityList","handleSubmit","event","preventDefault","result","error","className","onSubmit","type","value","placeholder","onChange","e","target","Activities","isLoggedIn","filterTerm","setFilterTerm","filter","activity","toLowerCase","includes","map","index","Routines","routineList","routine","creatorName","goal","href","onClick","activities","length","count","duration","MyRoutines","setGoal","setCount","setDuration","placeHolderActivities","setPlaceHolderActivities","modal","setModal","currentActivity","setCurrentActivity","useEffect","addNewRoutine","user","setRoutine","setRoutineList","isPublic","id","indexOf","updatedRoutineList","newRoutine","creatorId","activityId","routineActivityId","newList","routineIndex","activityIndex","splice","newRoutineList","newActivitiesList","document","getElementById","options","selectedIndex","innerText","newArray","list","newActivity","idx","push","Auth","setIsLoggedIn","message","setMessage","setUsername","setPassword","Search","App","myRoutines","setmyRoutines","setUser","then","catch","resp","fetchData","history","useHistory","to","removeItem","exact","path","src","Photo","alt","ReactDOM","render"],"mappings":"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","file":"static/js/main.d8fa8c64.chunk.js","sourcesContent":["export const BASE_URL = \"https://fitnesstrac-kr.herokuapp.com/api\";\n\nexport const clearToken = () => {\n  localStorage.removeItem(\"auth-token\");\n};\n\nexport const setToken = (token) => {\n  localStorage.setItem(\"auth-token\", token);\n};\n\nexport const getToken = () => {\n  return localStorage.getItem(\"auth-token\");\n};\n\nexport const auth = async (username, password, isNew = false) => {\n  let url = `${BASE_URL}/users` + (isNew ? \"/register\" : \"/login\");\n\n  try {\n    const response = await fetch(url, {\n      method: \"POST\",\n      headers: buildHeaders(),\n      body: JSON.stringify({\n        username: username,\n        password: password,\n      }),\n    });\n\n    const data = await response.json();\n\n    if (data.token) {\n      setToken(data.token);\n    }\n\n    return data;\n  } catch (err) {\n    console.log(\"Error from API index file:\", err);\n  }\n};\n\nfunction buildHeaders() {\n  let base = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  if (getToken()) {\n    base[\"Authorization\"] = `Bearer ${getToken()}`;\n  }\n\n  return base;\n}\n\nexport const fetchAPI = async (url, method = \"GET\", sendData = null) => {\n  const fetchOptions = {\n    method: method,\n    headers: buildHeaders(),\n  };\n\n  if (sendData) {\n    fetchOptions.body = JSON.stringify(sendData);\n  }\n\n  const response = await fetch(url, fetchOptions);\n  console.log(\"this is what we are sending in the fetch\", fetchOptions);\n  console.log(\"this is the initial response:\", response);\n  const data = await response.json();\n\n  console.log(\"result from fetch in api index file:\", data);\n\n  return data;\n};\n\n","import React, { useState } from \"react\";\nimport { fetchAPI, BASE_URL } from \"../api\";\n\nconst AddActivity = (props) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { activityList, setActivityList } = props;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const sendData = {\n      name,\n      description,\n    };\n\n    try {\n      const result = await fetchAPI(`${BASE_URL}/activities`, \"POST\", sendData);\n\n      if (result.error) {\n        console.log(\"result.error = \", result.error);\n        setErrorMessage(result.error);\n        setName(\"\");\n        setDescription(\"\");\n        return;\n      } else {\n        console.log(\"activity list:\", activityList);\n        console.log(\"send-data:\", result);\n        setActivityList([...activityList, result]);\n        setName(\"\");\n        setDescription(\"\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"newActivity\">\n        <form onSubmit={handleSubmit} className=\"newActivityForm\">\n          <h3>Create Activity</h3>\n          {errorMessage ? <h5 className=\"errorMessage\">{errorMessage}</h5> : \"\"}\n          <input\n            type=\"text\"\n            value={name}\n            placeholder=\"Activity Name\"\n            onChange={(e) => setName(e.target.value)}\n          ></input>\n          <textarea\n            type=\"text\"\n            value={description}\n            placeholder=\"Description of Activity\"\n            onChange={(e) => setDescription(e.target.value)}\n          ></textarea>\n\n          <button className=\"Submit\" type=\"submit\" value=\"Submit\">\n            Add Activity\n          </button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default AddActivity;","import React from \"react\";\nimport AddActivity from \"./AddActivity\";\n\nconst Activities = (props) => {\n  const {\n    activityList,\n    setActivityList,\n    isLoggedIn,\n    filterTerm,\n    setFilterTerm,\n  } = props;\n\n  return (\n    <div className=\"Activities\">\n      {isLoggedIn ? (\n        <AddActivity\n          activityList={activityList}\n          setActivityList={setActivityList}\n        />\n      ) : (\n        \"\"\n      )}\n      {activityList\n        .filter(function (activity) {\n          return activity.name.toLowerCase().includes(filterTerm.toLowerCase());\n        })\n        .map((activity, index) => {\n          return (\n            <div className=\"activity\" key={index}>\n              <h2>{activity.name}</h2>\n\n              <p>{activity.description}</p>\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Activities;","import React from \"react\";\n\nconst Routines = (props) => {\n  const { routineList, filterTerm, setFilterTerm } = props;\n\n  return (\n    <div className=\"routines\">\n      {routineList\n        .filter(function (routine) {\n          return (\n            routine.creatorName\n              .toLowerCase()\n              .includes(filterTerm.toLowerCase()) ||\n            routine.name.toLowerCase().includes(filterTerm.toLowerCase())\n          );\n        })\n        .map((routine, index) => {\n          return (\n            <div className=\"routine\" key={index}>\n              <h2>{routine.name}</h2>\n              <p>Goal: {routine.goal}</p>\n              <p>\n                Created by:{\"\"}\n                <span>\n                  <a\n                    className=\"tag\"\n                    href=\"#\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      setFilterTerm(routine.creatorName);\n                    }}\n                  >\n                    {\"\"}\n                    {routine.creatorName}\n                  </a>\n                </span>\n              </p>\n              {routine.activities && routine.activities.length > 0 ? (\n                <h3>Activities in this Routine:</h3>\n              ) : null}\n              {routine.activities &&\n                routine.activities.map((activity, index) => {\n                  return (\n                    <div className=\"activity\" key={index}>\n                      <h3>{activity.name}</h3>\n                      <p>{activity.description}</p>\n                      <p>\n                        Do this: {activity.count}{\" \"}\n                        {activity.count > 1 ? \"times\" : \"time\"}\n                      </p>\n                      <p>Duration: {activity.duration}</p>\n                    </div>\n                  );\n                })}\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Routines;","import React, { useState, useEffect } from \"react\";\nimport { fetchAPI, BASE_URL } from \"../api\";\n\nconst MyRoutines = (props) => {\n  const [name, setName] = useState(\"\");\n  const [goal, setGoal] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [placeHolderActivities, setPlaceHolderActivities] = useState([]);\n  const [modal, setModal] = useState(null);\n  const [currentActivity, setCurrentActivity] = useState(\"\");\n\n  useEffect(() => {\n    setName(routine.name || \"\");\n    setGoal(routine.goal || \"\");\n  }, []);\n\n  const {\n    addNewRoutine,\n    routineList,\n    user,\n    routine,\n    setRoutine,\n    activityList,\n    setRoutineList,\n    isLoggedIn,\n  } = props;\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const sendData = {\n      name,\n      goal,\n      isPublic: true,\n    };\n\n    if (routine.id) {\n      try {\n        await fetchAPI(`${BASE_URL}/routines/${routine.id}`, \"PATCH\", sendData);\n        let index = routineList.indexOf(routine);\n        let updatedRoutineList = [...routineList];\n        updatedRoutineList[index].name = name;\n        updatedRoutineList[index].description = goal;\n        setRoutineList(updatedRoutineList);\n        setName(\"\");\n        setGoal(\"\");\n        setRoutine(\"\");\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        const newRoutine = await fetchAPI(\n          `${BASE_URL}/routines`,\n          \"POST\",\n          sendData\n        );\n        newRoutine.creatorName = user.username;\n        console.log(\"the newRoutine response is:\", newRoutine);\n        addNewRoutine(newRoutine);\n        setName(\"\");\n        setGoal(\"\");\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  return (\n    <>\n      {isLoggedIn ? (\n        <div className=\"newRoutine\">\n          <form onSubmit={handleSubmit} className=\"newRoutineForm\">\n            {routine && name !== \"\" ? (\n              <h3>Edit Routine</h3>\n            ) : (\n              <h3>Create Routine</h3>\n            )}\n            <input\n              type=\"text\"\n              value={name}\n              placeholder=\"Routine Name\"\n              onChange={(e) => setName(e.target.value)}\n            ></input>\n            <textarea\n              type=\"text\"\n              value={goal}\n              placeholder=\"Description of Routine\"\n              onChange={(e) => setGoal(e.target.value)}\n            ></textarea>\n\n            <button className=\"Submit\" type=\"submit\" value=\"Submit\">\n              Submit\n            </button>\n            {routine.id && name !== \"\" ? (\n              <button\n                onClick={(event) => {\n                  event.preventDefault();\n                  setRoutine(\"\");\n                  setName(\"\");\n                  setGoal(\"\");\n                }}\n              >\n                Cancel\n              </button>\n            ) : null}\n          </form>\n        </div>\n      ) : null}\n\n      <div className=\"myRoutines\" className=\"routines\">\n        {routineList.map((routine) => {\n          return user.id === routine.creatorId ? (\n            <div className=\"routine\" key={routine.id}>\n              <h2>{routine.name}</h2>\n              <p>Goal: {routine.goal}</p>\n              <br />\n              {console.log(routine.activities)}\n              {routine.activities &&\n                routine.activities.map((activity, index) => {\n                  return user.id === routine.creatorId ? (\n                    <>\n                      <div className=\"activity\" key={index}>\n                        <h2>{activity.name}</h2>\n                        <p>{activity.description}</p>\n                        {currentActivity.id === activity.id ? (\n                          <span>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Enter Rep Count\"\n                              onChange={(event) => setCount(event.target.value)}\n                            ></input>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Enter Duration\"\n                              onChange={(event) =>\n                                setDuration(event.target.value)\n                              }\n                            ></input>\n                            <button\n                              onClick={async (event) => {\n                                event.preventDefault();\n\n                                let sendData = {\n                                  activityId: activity.id,\n                                  count: count,\n                                  duration: duration,\n                                };\n\n                                try {\n                                  await fetchAPI(\n                                    `${BASE_URL}/routine_activities/${activity.routineActivityId}`,\n                                    \"PATCH\",\n                                    sendData\n                                  );\n\n                                  if (index > -1) {\n                                    let newList = [...routineList];\n                                    let routineIndex = newList.indexOf(routine);\n\n                                    newList[routineIndex].activities[\n                                      index\n                                    ].count = count;\n                                    newList[routineIndex].activities[\n                                      index\n                                    ].duration = duration;\n                                    setRoutineList(newList);\n                                  }\n\n                                  setCurrentActivity(\"\");\n                                } catch (err) {\n                                  console.error(err);\n                                }\n                              }}\n                            >\n                              Submit Changes\n                            </button>\n                            <button\n                              onClick={(event) => {\n                                event.preventDefault();\n                                setCurrentActivity(\"\");\n                              }}\n                            >\n                              Cancel\n                            </button>\n                          </span>\n                        ) : (\n                          <>\n                            {\" \"}\n                            <span>\n                              <p>\n                                Do this: {activity.count}{\" \"}\n                                {activity.count > 1 ? \"times\" : \"time\"}\n                              </p>\n                              <p>Duration: {activity.duration}</p>{\" \"}\n                            </span>\n                            <button\n                              className=\"routine-activity-button\"\n                              onClick={(event) => {\n                                event.preventDefault();\n                                setRoutine(routine);\n                                console.log(\n                                  \"activities in the routine are\",\n                                  routine.activities\n                                );\n                                setCurrentActivity(activity);\n                              }}\n                            >\n                              Edit Activity\n                            </button>\n                            <button\n                              className=\"routine-activity-button\"\n                              onClick={async (event) => {\n                                event.preventDefault();\n\n                                try {\n                                  let url = `${BASE_URL}/routine_activities/${activity.routineActivityId}`;\n\n                                  await fetchAPI(url, \"DELETE\");\n\n                                  const newList = [...routineList];\n\n                                  let index = newList.indexOf(routine);\n                                  let activityIndex = newList[\n                                    index\n                                  ].activities.indexOf(activity);\n\n                                  newList[index].activities.splice(\n                                    activityIndex,\n                                    1\n                                  );\n                                  setRoutineList(newList);\n                                  setCurrentActivity(\"\");\n                                } catch (err) {\n                                  console.error(err);\n                                }\n                              }}\n                            >\n                              Delete Activity\n                            </button>\n                          </>\n                        )}\n                      </div>{\" \"}\n                    </>\n                  ) : null;\n                })}\n              <button\n                onClick={(event) => {\n                  event.preventDefault();\n                  setRoutine(routine);\n                  console.log(\"the current routine is\", routine.id);\n                  setName(routine.name);\n                  setGoal(routine.goal);\n                }}\n              >\n                Edit Routine\n              </button>\n              <button\n                onClick={(event) => {\n                  event.preventDefault();\n                  setRoutine(routine);\n                  console.log(\"the routine is:\", routine);\n                  setModal(routine.id);\n                  if (routine.activities) {\n                    return;\n                  } else {\n                    let newRoutineList = [...routineList];\n                    let newActivitiesList = (routine.activities = []);\n                    let index = routineList.indexOf(routine);\n                    routineList[index].activities = newActivitiesList;\n                    newRoutineList.splice(index, 1, routine);\n                    setRoutineList(newRoutineList);\n                  }\n                }}\n              >\n                Add Activities\n              </button>\n              <button\n                onClick={async (event) => {\n                  event.preventDefault();\n                  setRoutine(routine);\n\n                  try {\n                    let url = `${BASE_URL}/routines/${routine.id}`;\n                    const newList = [...routineList];\n                    await fetchAPI(url, \"DELETE\");\n\n                    let routineIndex = newList.indexOf(routine);\n                    newList.splice(routineIndex, 1);\n                    setRoutineList(newList);\n                    setRoutine(\"\");\n                  } catch (err) {\n                    console.error(err);\n                  }\n                }}\n              >\n                Delete Routine\n              </button>\n              {modal === routine.id ? (\n                <div className=\"routine-modal\">\n                  <div>\n                    <select id=\"routineActivityList\" className=\"modal-content\">\n                      {activityList.map((activity, index) => {\n                        return (\n                          <>\n                            <option\n                              key={activity.id}\n                              value={activity.id}\n                              key={index}\n                            >\n                              {activity.name}\n                            </option>\n                          </>\n                        );\n                      })}\n                    </select>\n                    <button\n                      onClick={(event) => {\n                        let e = document.getElementById(\"routineActivityList\");\n                        let result = {\n                          id: e.options[e.selectedIndex].value,\n                          name: e.options[e.selectedIndex].innerText,\n                        };\n\n                        console.log(\"result is: \", result);\n                        event.preventDefault();\n                        let newArray = [...placeHolderActivities, result];\n                        setPlaceHolderActivities(newArray);\n                      }}\n                    >\n                      {console.log(\n                        \"the placeholders list is now:\",\n                        placeHolderActivities\n                      )}\n                      Select Activity\n                    </button>\n                    {placeHolderActivities.map((activity) => {\n                      return (\n                        <div\n                          className=\"activity\"\n                          key={activity.id}\n                          value={activity.id}\n                        >\n                          <p>{activity.name}</p>\n\n                          <span>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Enter Rep Count\"\n                              onChange={(event) => setCount(event.target.value)}\n                            ></input>\n                            <input\n                              type=\"text\"\n                              placeholder=\"Enter Duration\"\n                              onChange={(event) =>\n                                setDuration(event.target.value)\n                              }\n                            ></input>\n                            <button\n                              onClick={async (event) => {\n                                event.preventDefault();\n\n                                let sendData = {\n                                  activityId: activity.id,\n                                  count: count,\n                                  duration: duration,\n                                };\n\n                                try {\n                                  await fetchAPI(\n                                    `${BASE_URL}/routines/${routine.id}/activities`,\n                                    \"POST\",\n                                    sendData\n                                  );\n                                  let list = [...placeHolderActivities];\n                                  let index = list.indexOf(activity);\n                                  list.splice(index, 1);\n                                  setPlaceHolderActivities(list);\n\n                                  let newActivity = {\n                                    id: activity.id,\n                                    name: activity.name,\n                                    description: activity.description,\n                                    duration: duration,\n                                    count: count,\n                                    routineActivityId:\n                                      activity.routineActivityId,\n                                  };\n\n                                  const newList = [...routineList];\n                                  let idx = newList.indexOf(routine);\n                                  console.log(\"the index of the push is\", idx);\n                                  console.log(\n                                    \"the newList[index] is\",\n                                    newList[idx]\n                                  );\n                                  newList[idx].activities.push(newActivity);\n                                  setRoutineList(newList);\n\n                                  if (placeHolderActivities.length < 0) {\n                                    setModal([]);\n                                  }\n                                } catch (err) {\n                                  console.log(err);\n                                }\n                              }}\n                            >\n                              Add to Routine\n                            </button>\n                            <button\n                              onClick={(event) => {\n                                event.preventDefault();\n                                let list = [...placeHolderActivities];\n                                let index = list.indexOf(activity);\n                                list.splice(index, 1);\n                                setPlaceHolderActivities(list);\n                                console.log(\"the current routine is:\", routine);\n                              }}\n                            >\n                              Delete Activity\n                            </button>\n                          </span>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          ) : (\n            \"\"\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default MyRoutines;","import React, { useState } from \"react\";\n\nimport { auth } from \"../api\";\n\nconst Auth = (props) => {\n  const { setIsLoggedIn, message, setMessage } = props;\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <form className=\"auth\" onSubmit={(event) => event.preventDefault()}>\n      <h3>Log-In or Sign-Up</h3>\n      <h5 className=\"message\">{message}</h5>\n      <input\n        type=\"text\"\n        value={username}\n        onChange={(event) => setUsername(event.target.value)}\n        placeholder=\"username\"\n        className=\"login\"\n      />\n      <input\n        type=\"password\"\n        value={password}\n        onChange={(event) => setPassword(event.target.value)}\n        placeholder=\"password\"\n        className=\"login\"\n      />\n      <button\n        onClick={async (event) => {\n          event.preventDefault();\n\n          try {\n            let result = await auth(username, password, true);\n\n            if (result.error) {\n              setMessage(result.error);\n              return <h5 className=\"message\">{message}</h5>;\n            } else {\n              setIsLoggedIn(true);\n              setMessage(result.message);\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        Register\n      </button>\n      <button\n        onClick={async (event) => {\n          event.preventDefault();\n          try {\n            let result = await auth(username, password);\n\n            if (result.error) {\n              setMessage(result.error);\n              return <h5 className=\"message\">{message}</h5>;\n            } else {\n              setIsLoggedIn(true);\n              setMessage(result.message);\n            }\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        Log In\n      </button>\n    </form>\n  );\n};\n\nexport default Auth;","import React from \"react\";\n\nconst Search = (props) => {\n  const { filterTerm, setFilterTerm } = props;\n\n  return (\n    <form\n      id=\"search\"\n      className=\"search\"\n      onSubmit={(event) => {\n        event.preventDefault();\n      }}\n    >\n      <input\n        id=\"keywords\"\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"search\"\n        value={filterTerm}\n        onChange={(event) => {\n          setFilterTerm(event.target.value);\n        }}\n      />\n      <button onClick={() => setFilterTerm(\"\")}>RESET FILTER</button>\n    </form>\n  );\n};\n\nexport default Search;","export default __webpack_public_path__ + \"static/media/kettles.b4bf8643.jpg\";","import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { fetchAPI, BASE_URL } from \"./api\";\nimport { Activities, MyRoutines, Routines, Auth, Search } from \"./Components\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport { clearToken } from \"./api\";\nimport Photo from \"./kettles.jpg\";\n\nconst App = () => {\n  const [routineList, setRoutineList] = useState([]);\n  const [activityList, setActivityList] = useState([]);\n  const [myRoutines, setmyRoutines] = useState([]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [filterTerm, setFilterTerm] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [routine, setRoutine] = useState(\"\");\n\n  useEffect(() => {\n    fetchAPI(BASE_URL + `/routines`)\n      .then((data) => {\n        setRoutineList(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    fetchAPI(BASE_URL + `/activities`)\n      .then((data) => {\n        setActivityList(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  useEffect(() => {\n    async function fetchData() {\n      const resp = await fetchAPI(BASE_URL + `/users/me`);\n      const user = resp;\n      setUser(user);\n    }\n    fetchData();\n  }, [isLoggedIn]);\n\n  const addNewRoutine = (newRoutine) => {\n    return setRoutineList([newRoutine, ...routineList]);\n  };\n\n  console.log(\"the routine list is:\", routineList);\n\n  let history = useHistory();\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Welcome to FitnessTrackr</h1>\n        <nav>\n          <Link to=\"/\">Home </Link>\n          <Link to=\"/Activities\"> Activities </Link>\n          <Link to=\"/Routines\"> Routines </Link>\n          {isLoggedIn ? (\n            <>\n              {\" \"}\n              <Link to=\"/MyRoutines\"> My Routines</Link>\n            </>\n          ) : (\n            \"\"\n          )}\n        </nav>\n\n        {isLoggedIn ? (\n          <>\n            <div className=\"authenticated-nav\">\n              <h1 className=\"loginMessage\">{message}</h1>\n\n              <button\n                className=\"logout-button\"\n                onClick={() => {\n                  clearToken();\n                  setIsLoggedIn(false);\n                  setMessage(\"\");\n                  history.push(\"/\");\n                  setRoutine(\"\");\n                }}\n              >\n                LOG OUT\n              </button>\n            </div>\n          </>\n        ) : (\n          <Auth\n            setIsLoggedIn={setIsLoggedIn}\n            isLoggedIn={isLoggedIn}\n            message={message}\n            setMessage={setMessage}\n          />\n        )}\n      </header>\n      <main>\n        <Route exact path=\"/\">\n          <img className=\"homePhoto\" src={Photo} alt=\"Photo of kettlebells\" />\n        </Route>\n        <Route exact path=\"/Activities\">\n          <Search filterTerm={filterTerm} setFilterTerm={setFilterTerm} />\n          <Activities\n            activityList={activityList}\n            isLoggedIn={isLoggedIn}\n            setActivityList={setActivityList}\n            filterTerm={filterTerm}\n            setFilterTerm={setFilterTerm}\n          />\n        </Route>\n        <Route exact path=\"/Routines\">\n          <Search filterTerm={filterTerm} setFilterTerm={setFilterTerm} />\n          <Routines\n            routineList={routineList}\n            setRoutineList={setRoutineList}\n            filterTerm={filterTerm}\n            setFilterTerm={setFilterTerm}\n            isLoggedIn={isLoggedIn}\n          />\n        </Route>\n        <Route exact path=\"/MyRoutines\">\n          <MyRoutines\n            routineList={routineList}\n            setRoutineList={setRoutineList}\n            myRoutines={myRoutines}\n            setmyRoutines={setmyRoutines}\n            addNewRoutine={addNewRoutine}\n            user={user}\n            routine={routine}\n            setRoutine={setRoutine}\n            activityList={activityList}\n            isLoggedIn={isLoggedIn}\n          />\n        </Route>\n      </main>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);"],"sourceRoot":""}